name: Flutter Clean Architecture CI/CD with Github Action

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint_test:
    name: Clean & Run UT
    runs-on: ubuntu-latest
    env:
      REPOSITORY_URL: docker.pkg.github.com
      IMAGE_NAME: ${{ github.repository }}/alerta-cli
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: master

      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#workflows'
          message: @here ${{ github.event.pull_request.user.login }} requests merge from ${{ github.event.pull_request.head.repo.owner.login }} to ${{github
          .event.pull_request.head.ref}}
        if: always()

      - name: Flutter clean cache
        run: flutter clean

      - name: Get dependences
        id: packages-get
        run: flutter pub get

      - name: Check lint
        id: code-convention
        run: flutter analyze

      - name: Run UT
        id: run-unit-test
        run: flutter test --coverage lib/

      - name: Generate coverage report
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: coverage/lcov.info
          minimum-coverage: 10
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#workflows'
        if: always()

#  build_ios:
#    name: Build Flutter (iOS)
#    needs: lint_test
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: master
#
#      - name: Build ios
#        run: flutter build ios --debug --flavor dev --no-codesign
#
#  build_apk:
#    name: Build Flutter (Android)
#    runs-on: ubuntu-latest
#    needs: lint_test
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: master
#
#      - name: Build android
#        run: flutter build apk --debug --flavor dev --dart-define=FLAVOR=dev
#
#  build_exe:
#    name: Build for Windows
#    runs-on: windows-latest
#    needs: lint_test
#    steps:
#      - uses: actions/checkout@v2
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: master
#      - name: Enable desktop support for Flutter
#        run: flutter config --enable-windows-desktop
#
#      - name: Build Windows Debug
#        run: |
#          flutter packages get
#          flutter build -v windows --debug